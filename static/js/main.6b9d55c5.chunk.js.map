{"version":3,"sources":["SeasonDisplay.js","logo.svg","Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","console","log","className","Spinner","class","message","defaultProps","App","state","error","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAEMA,GCFS,I,YDEI,CACfC,OAAO,CACHC,KAAK,wBACLC,SAAS,OAEbC,OAAO,CACHF,KAAK,OACLC,SAAS,eAuBFE,EAZO,SAACC,GACvB,IATmBC,EAAIC,EASjBC,GATaF,EASMD,EAAMC,KATRC,GASY,IAAIE,MAAOC,YAR9B,GAAKH,EAAO,EACdD,EAAM,EAAI,SAAS,SAGpBA,EAAM,EAAI,SAAS,UAK5BK,QAAQC,IAAIP,EAAMC,KAClBK,QAAQC,IAAIJ,GAHgB,MAIVT,EAAaS,GAA5BP,EAJyB,EAIzBA,KAAKC,EAJoB,EAIpBA,SACR,OAAO,sBAAKW,UAAS,yBAAoBL,GAAlC,UACH,mBAAGK,UAAS,6BAAwBX,EAAxB,WACZ,6BAAKD,IACL,mBAAGY,UAAS,6BAAwBX,EAAxB,eE3BdY,EAAU,SAACT,GACb,OAEF,qBAAKU,MAAM,mBAAX,SACE,qBAAKA,MAAM,iBAAX,SAA6BV,EAAMW,aAIvCF,EAAQG,aAAa,CACjBD,QAAQ,cAIGF,QCmCAI,E,4MArCbC,MAAM,CACJb,IAAI,KACJc,MAAM,I,kEAEY,IAAD,OACjBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAACpB,IAAImB,EAASE,OAAOC,cAC/C,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAACN,MAAMS,EAAIb,e,+BAIlC,OAAIc,KAAKX,MAAMC,QAAUU,KAAKX,MAAMb,IAC3B,2CAAcwB,KAAKX,MAAMC,UAG5BU,KAAKX,MAAMC,OAASU,KAAKX,MAAMb,IAC5B,cAAC,EAAD,CAAgBA,IAAKwB,KAAKX,MAAMb,MAI3C,cAAC,EAAD,CAASU,QAAQ,2B,GArBDe,IAAMC,WCCTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6b9d55c5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SeasonDisplay.css'\r\nconst seasonConfig={\r\n    summer:{\r\n        text:'Let\\'s go to the beach',\r\n        iconName:'sun'\r\n    },\r\n    winter:{\r\n        text:'Cold',\r\n        iconName:'snowflake'\r\n    }\r\n}\r\nconst getSeason = (lat,month)=>{\r\n    if (month > 2 && month <9){\r\n       return lat > 0 ? 'summer':'winter'\r\n\r\n    }else{ \r\n      return lat > 0 ? 'winter':'summer'\r\n    }\r\n}\r\nconst SeasonDisplay = (props) =>{\r\nconst season = getSeason(props.lat,new Date().getMonth())\r\n    console.log(props.lat)\r\n    console.log(season)\r\nconst {text,iconName}=seasonConfig[season]\r\n    return <div className={`season-display ${season}`}>\r\n        <i className={` icon-left massive ${iconName} icon`}/>\r\n        <h1>{text}</h1>\r\n        <i className={`icon-right massive ${iconName} icon`}/>\r\n    </div>\r\n}\r\n\r\nexport default SeasonDisplay","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","\r\nconst Spinner = (props) =>{\r\n    return(\r\n        \r\n  <div class=\"ui active dimmer\">\r\n    <div class=\"ui text loader\">{props.message}</div>\r\n  </div>\r\n    )\r\n}\r\nSpinner.defaultProps={\r\n    message:'Loading...'\r\n\r\n    \r\n}\r\nexport default Spinner","import logo from './logo.svg';\nimport './App.css';\n//import CommentDetail from './CommentDetail'\n//import ApprovalCard from './ApprovalCard'\n//import faker from 'faker'\nimport React from 'react';\nimport SeasonDisplay from './SeasonDisplay'\nimport Spinner from './Spinner'\n\n\n\nclass App extends React.Component {\n  state={\n    lat:null,\n    error:''\n  }\n  componentDidMount(){\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({lat:position.coords.latitude}),\n      err => this.setState({error:err.message})\n    )\n  }\n  render(){\n    if (this.state.error && !this.state.lat){\n      return <div>Error : {this.state.error} \n      </div>\n      }\n      if(!this.state.error && this.state.lat){\n      return <SeasonDisplay  lat={this.state.lat}/>\n      }\n          \n  return(\n  <Spinner message='Enable GeoLocation'/>) \n  \n  };\n\n  \n   // <div className='ui container comments'>\n   //   <ApprovalCard>\n     // <CommentDetail author='Sam' time='6:00PM' text='Oke'image={faker.image.avatar()}/>\n     // </ApprovalCard>\n     // <CommentDetail author='June' time='9:00PM' text='Poke' image={faker.image.avatar()}/>\n     // <CommentDetail author='Dam' time='10:00PM' text='DOke' image={faker.image.avatar()}/>\n    //</div>\n    \n\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}